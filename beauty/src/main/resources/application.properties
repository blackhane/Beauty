#Context
server.servlet.context-path=/Beauty

#port
server.port=8080

#Liveload
spring.devtools.livereload.enabled=true

#thymeleaf
spring.thymeleaf.cache=false
# thymeleaf
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.suffix=.html

#Mybatis
spring.datasource.url=jdbc:mysql://43.201.83.163/beauty
spring.datasource.username=m4
#ParkJinHwi : m1
#KimDongGeun : m2
#YoonSaRang : m3
#KimBoSung : m4
#KangJungHyeon : m5
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#MyBatis Mapper
mybatis.mapper-locations=classpath:mappers/**/*.xml
#MyBatis alias
mybatis.type-aliases-package=kr.co.beauty.vo

#JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database=mysql
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#Log
logging.level.root=info
#logging.level.kr.co.sboard.controller=debug
#logging.level.kr.co.sboard.service=warn

#Log Save
logging.file.name=log/beauty.log

#Log
logging.level.jdbc.sqlonly=info
logging.level.jdbc.sqltiming=info
logging.level.jdbc.resultsettable=info
logging.level.jdbc.connection=off
logging.level.org.hibernate=info

#File Save
spring.servlet.multipart.location=C:/Users/gpaj1/Desktop/thumb/
#spring.servlet.multipart.location=/home/beauty/thumb/
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=0KB
spring.servlet.multipart.max-file-size=10MB

#이메일 인증
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=
spring.mail.password=
spring.mail.properties.debug=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com




##OAuth
#spring.profiles.include=oauth
## google
#spring.security.oauth2.client.registration.google.client-id = 
#spring.security.oauth2.client.registration.google.client-secret = 
#spring.security.oauth2.client.registration.google.scope = profile, email
#
#
#
##Kakao
#spring.security.oauth2.client.registration.kakao.client-id = 
#spring.security.oauth2.client.registration.kakao.client-secret = 
#spring.security.oauth2.client.registration.kakao.scope = profile_nickname, account_email
#spring.security.oauth2.client.registration.kakao.client-name = Kakao
#spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
#spring.security.oauth2.client.registration.kakao.redirect-uri = http://localhost:8080/login/oauth2/code/kakao
#spring.security.oauth2.client.registration.kakao.client-authentication-method = POST
#
#spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
#spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
#spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
#spring.security.oauth2.client.provider.kakao.user-name-attribute = 
#
#
#
## Naver
#spring.security.oauth2.client.registration.naver.client-id=
#spring.security.oauth2.client.registration.naver.client-secret=
# 
## Naver Spring Security 수동 입력
## == http://localhost:8080/login/oauth2/code/naver
#spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.naver.scope=name,email,nickname
#spring.security.oauth2.client.registration.naver.client-name=Naver
# 
## provider
#spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
#spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
#spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
## Security의 기준이 되는 username의 이름을 네이버에서는 response로 (회원 조회시 반환되는 JSON 형태 때문)
#spring.security.oauth2.client.provider.naver.user-name-attribute=response



